{"version":3,"sources":["components/title/index.js","components/text/index.js","components/button/index.js","modules/instructions/index.js","components/card/index.js","components/trick-row/index.js","components/loader/index.js","modules/trick/index.js","modules/chosen-card/index.js","EleventhContent.js","utils/urls/index.js","services/get-cards/index.js","utils/order-array-treatment/index.js","App.js","serviceWorker.js","index.js"],"names":["Title","_ref","weight","text","react_default","a","createElement","className","defaultProps","DisplayedText","step","Button","children","action","cssStyle","onClick","Instructions","appName","goOn","components_title","src_components_text","src_components_button","Card","image","suit","value","src","alt","concat","TrickRow","cards","chooseRow","map","item","index","components_card","key","Loader","Trick","isLoading","components_loader","items","components_trick_row","ChosenCard","chosenCard","tryAgain","EleventhContent","isChosenCard","isInstructions","isTrick","src_modules_instructions","modules_trick","chosen_card","getCardsConfigURL","getDeckURL","id","getCardsConfig","Object","asyncToGenerator","regenerator_default","mark","_callee","url","config","wrap","_context","prev","next","fetch","then","data","json","sent","t0","Error","TypeError","abrupt","stop","_x","apply","this","arguments","getDeck","_ref2","_callee2","deck","_context2","_x2","orderArrayTreatment","counter","array","length","undefined","chosenRow","newArray","changeArrayPosition","push","splice","stepOrder","tempArray","toConsumableArray","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","deck_id","setState","newCardsOrder","fillCards","isLocalStorageFilled","_ref3","localStorageCards","localStorage","getItem","setItem","JSON","stringify","parse","src_EleventhContent","assign","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"saAKMA,SAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,KAAX,OACD,IAAXD,EACEE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYJ,GAE1BC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYJ,KAG9BH,EAAMQ,aAAe,CACnBN,OAAQ,GAQKF,QCKAS,SAdO,SAAAR,GAAA,IAAGS,EAAHT,EAAGS,KAAH,OACpBA,GACEN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WACD,iBAATG,EAXW,2SAW8B,GAChC,IAATA,EAVQ,yGAUiB,GAChB,IAATA,EATS,mEASiB,GACjB,IAATA,EARO,yDAQiB,MCDhBC,SAZA,SAAAV,GAAA,IAAGW,EAAHX,EAAGW,SAAUC,EAAbZ,EAAaY,OAAQC,EAArBb,EAAqBa,SAArB,OACbV,EAAAC,EAAAC,cAAA,UAAQC,UAAWO,EAAUC,QAASF,GACnCD,KCUUI,SAVM,SAAAf,GAAA,IAAGgB,EAAHhB,EAAGgB,QAASC,EAAZjB,EAAYiB,KAAMR,EAAlBT,EAAkBS,KAAlB,OACnBN,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACjBH,EAAAC,EAAAC,cAACa,EAAD,CAAOhB,KAAMc,IACbb,EAAAC,EAAAC,cAACc,EAAD,CAAeV,KAAMA,IACrBN,EAAAC,EAAAC,cAACe,EAAD,CAAQP,SAAS,qBAAqBD,OAAQK,GAA9C,eCMWI,SAZF,SAAArB,GAAA,IAAGsB,EAAHtB,EAAGsB,MAAOC,EAAVvB,EAAUuB,KAAMC,EAAhBxB,EAAgBwB,MAAhB,OACXrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKoB,IAAKH,EAAOI,IAAG,GAAAC,OAAKH,EAAL,QAAAG,OAAiBJ,QCsB1BK,SAvBE,SAAA5B,GAAA,IAAG6B,EAAH7B,EAAG6B,MAAOC,EAAV9B,EAAU8B,UAAWN,EAArBxB,EAAqBwB,MAArB,OACfrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACe,EAAD,CACEP,SAAS,mBACTD,OAAQ,WACNkB,EAAUN,EAAQ,KAGnBA,GAGFK,EAAME,IAAI,SAACC,EAAMC,GAAP,OACT9B,EAAAC,EAAAC,cAAC6B,EAAD,CACEZ,MAAOU,EAAKV,MACZE,MAAOQ,EAAKR,MACZD,KAAMS,EAAKT,KACXY,IAAKF,EACLA,MAAOA,SClBAG,SAFA,kBAAMjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aCyBrB+B,SApBD,SAAArC,GAAA,IAAGgB,EAAHhB,EAAGgB,QAASa,EAAZ7B,EAAY6B,MAAOC,EAAnB9B,EAAmB8B,UAAWQ,EAA9BtC,EAA8BsC,UAAW7B,EAAzCT,EAAyCS,KAAzC,OACZN,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACa,EAAD,CAAOhB,KAAMc,IACbb,EAAAC,EAAAC,cAACc,EAAD,CAAeV,KAAMA,IACrBN,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBAChBgC,GAAanC,EAAAC,EAAAC,cAACkC,EAAD,OAEZD,GACAT,EAAME,IAAI,SAACS,EAAOP,GAAR,OACR9B,EAAAC,EAAAC,cAACoC,EAAD,CACEX,UAAWA,EACXD,MAAOW,EACPhB,MAAOS,EAAQ,EACfE,IAAKF,UCHFS,EAdI,SAAA1C,GAAA,IAAG2C,EAAH3C,EAAG2C,WAAYC,EAAf5C,EAAe4C,SAAf,OACjBzC,EAAAC,EAAAC,cAAA,WAASC,UAAU,cACjBH,EAAAC,EAAAC,cAACa,EAAD,CAAOhB,KAAK,sBAAsBD,OAAQ,IAC1CE,EAAAC,EAAAC,cAAA,OACEC,UAAU,oBACVmB,IAAKkB,EAAWrB,MAChBI,IAAG,GAAAC,OAAKgB,EAAWnB,MAAhB,QAAAG,OAA4BgB,EAAWpB,QAE5CpB,EAAAC,EAAAC,cAACe,EAAD,CAAQP,SAAS,qBAAqBD,OAAQgC,GAA9C,eCyBWC,EAhCS,SAAA7C,GAAA,IACtBgB,EADsBhB,EACtBgB,QACAa,EAFsB7B,EAEtB6B,MACAc,EAHsB3C,EAGtB2C,WACAb,EAJsB9B,EAItB8B,UACAb,EALsBjB,EAKtBiB,KACA6B,EANsB9C,EAMtB8C,aACAC,EAPsB/C,EAOtB+C,eACAT,EARsBtC,EAQtBsC,UACAU,EATsBhD,EAStBgD,QACAJ,EAVsB5C,EAUtB4C,SACAnC,EAXsBT,EAWtBS,KAXsB,OAatBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZyC,GACC5C,EAAAC,EAAAC,cAAC4C,EAAD,CAAcjC,QAASA,EAASC,KAAMA,EAAMR,KAAMA,IAGnDuC,GACC7C,EAAAC,EAAAC,cAAC6C,EAAD,CACElC,QAASA,EACTa,MAAOA,EACPC,UAAWA,EACXQ,UAAWA,EACX7B,KAAMA,IAITqC,GAAgB3C,EAAAC,EAAAC,cAAC8C,EAAD,CAAYR,WAAYA,EAAYC,SAAUA,MCjC7DQ,EACJ,gEAEIC,EAAa,SAAAC,GAAE,6CAAA3B,OACoB2B,EADpB,oBCDfC,EAAc,eAAAvD,EAAAwD,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAG,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAJ,EAAAtD,EAAA2D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGJC,MAAMN,GAClBO,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAC,GAAI,OAAIA,IALG,OAGnBP,EAHmBE,EAAAO,KAAAP,EAAAE,KAAA,qBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAOb,IAAIS,MAAMC,UAAW,uCAPR,cAAAV,EAAAW,OAAA,SAUdb,GAVc,yBAAAE,EAAAY,SAAAhB,EAAA,iBAAH,gBAAAiB,GAAA,OAAA7E,EAAA8E,MAAAC,KAAAC,YAAA,GAadC,EAAO,eAAAC,EAAA1B,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAG,SAAAwB,EAAM7B,GAAN,IAAA8B,EAAA,OAAA1B,EAAAtD,EAAA2D,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAApB,KAAA,EAAAoB,EAAAnB,KAAA,EAICC,MAAMd,EAAWC,IAAKc,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAJzC,OAIZc,EAJYC,EAAAd,KAAAc,EAAAnB,KAAA,qBAAAmB,EAAApB,KAAA,EAAAoB,EAAAb,GAAAa,EAAA,SAMN,IAAIZ,MAAMC,UAAW,qCANf,cAAAW,EAAAV,OAAA,SASPS,GATO,yBAAAC,EAAAT,SAAAO,EAAA,iBAAH,gBAAAG,GAAA,OAAAJ,EAAAJ,MAAAC,KAAAC,YAAA,GCfPO,EAAsB,WAAuC,IAG7DC,EAHuBC,EAAsCT,UAAAU,OAAA,QAAAC,IAAAX,UAAA,GAAAA,UAAA,GAA9B,GAAIY,EAA0BZ,UAAAU,OAAA,QAAAC,IAAAX,UAAA,GAAAA,UAAA,QAAdW,EAC/CE,EAAW,CAAC,GAAI,GAAI,IACpBC,EAAuBF,EAAmB,GAAP,KAGvC,IAAKJ,EAAU,EAAGA,EAAUC,EAAMC,OAAQF,IACxCK,EAAS,GAAGE,KAAKN,EAAMD,IACvBA,IACAK,EAAS,GAAGE,KAAKN,EAAMD,IACvBA,IACAK,EAAS,GAAGE,KAAKN,EAAMD,IAYzB,MATyB,kBAAdI,IACTE,EAAsBD,EAASG,OAC7BJ,EACc,IAAdA,EAAkB,EAAIA,GAGxBC,EAAW,CAACA,EAAS,GAAIC,EAAoB,GAAID,EAAS,KAGrDA,GAGHI,EAAY,SAAAR,GAChB,IACIS,EACAV,EAFAK,EAAW,CAAC,GAAI,GAAI,IAMxB,IAFAK,EAAS,GAAAvE,OAAA6B,OAAA2C,EAAA,EAAA3C,CAAOiC,EAAM,GAAG,IAAhBjC,OAAA2C,EAAA,EAAA3C,CAAuBiC,EAAM,GAAG,IAAhCjC,OAAA2C,EAAA,EAAA3C,CAAuCiC,EAAM,GAAG,KAEpDD,EAAU,EAAGA,EAAU,GAAIA,IAC9BK,EAAS,GAAGE,KAAKG,EAAUV,IAC3BA,IACAK,EAAS,GAAGE,KAAKG,EAAUV,IAC3BA,IACAK,EAAS,GAAGE,KAAKG,EAAUV,IAG7B,OAAOK,GC4DMO,cA7Fb,SAAAA,IAAc,IAAAC,EAAA,OAAA7C,OAAA8C,EAAA,EAAA9C,CAAAuB,KAAAqB,IACZC,EAAA7C,OAAA+C,EAAA,EAAA/C,CAAAuB,KAAAvB,OAAAgD,EAAA,EAAAhD,CAAA4C,GAAAK,KAAA1B,QACK2B,MAAQ,CACX1F,QAAS,0BACTa,MAAO,GACPc,WAAY,GACZgE,QAAS,GACT7D,cAAc,EACdC,gBAAgB,EAChBT,WAAW,EACXU,SAAS,EACTvC,KAAM,gBAGR4F,EAAKpF,KAAO,WACVoF,EAAKO,SAAS,CACZ7D,gBAAgB,EAChBC,SAAS,EACTvC,KAAM,KAIV4F,EAAKvE,UAAY,SAAAG,GACf,IAAIJ,EAAQwE,EAAKK,MAAM7E,MACnBgF,EAAgBZ,EAAUV,EAAoB1D,EAAOI,IACrDxB,EAAO4F,EAAKK,MAAMjG,KAET,IAATA,GAAY4F,EAAK1D,WAAWkE,EAAc,GAAG,IAEjDR,EAAKO,SAAS,CAAE/E,MAAOgF,EAAepG,KAAOA,GAAQ,KAGvD4F,EAAK1D,WAAa,SAAAA,GAAc,IACtBrB,EAAuBqB,EAAvBrB,MAAOC,EAAgBoB,EAAhBpB,KAAMC,EAAUmB,EAAVnB,MAErB6E,EAAKO,SAAS,CACZjE,WAAY,CACVrB,QACAC,OACAC,SAEFwB,SAAS,EACTF,cAAc,KAIlBuD,EAAKzD,SAAW,WACd,IAAMf,EAAQwE,EAAKK,MAAM7E,MACzBwE,EAAKO,SAAS,CACZ/E,MAAOoE,EAAUV,EAAoB1D,IACrCiB,cAAc,EACdE,SAAS,EACTvC,KAAM,KAIV4F,EAAKS,UAALtD,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAiB,SAAAC,IAAA,IAAAmD,EAAA7B,EAAAyB,EAAAK,EAAAnF,EAAAoF,EAAA,OAAAvD,EAAAtD,EAAA2D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACX6C,IAAyBG,aAAaC,QAAQ,SAClDd,EAAKO,SAAS,CAAEtE,WAAW,IAEtByE,EAJU,CAAA/C,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKaX,EAAeH,GAL5B,cAAA8B,EAAAlB,EAAAO,KAKLoC,EALKzB,EAKLyB,QALK3C,EAAAE,KAAA,EAMSe,EAAQ0B,GANjB,OAAAK,EAAAhD,EAAAO,KAMP1C,EANOmF,EAMPnF,MACNA,EAAQ0D,EAAoB1D,GAE5BqF,aAAaE,QAAQ,QAASC,KAAKC,UAAUzF,IAE7CwE,EAAKO,SAAS,CAAE/E,QAAO8E,UAASrE,WAAW,IAX9B0B,EAAAE,KAAA,iBAaT+C,EAAoBI,KAAKE,MAAML,aAAaC,QAAQ,UACxDF,EAAiBzD,OAAA2C,EAAA,EAAA3C,CAAOyD,GAExBZ,EAAKO,SAAS,CAAE/E,MAAOoF,EAAmB3E,WAAW,IAhBxC,yBAAA0B,EAAAY,SAAAhB,MAxDLyC,mFA8EZtB,KAAK+B,6CAIL,OACE3G,EAAAC,EAAAC,cAACmH,EAADhE,OAAAiE,OAAA,GACM1C,KAAK2B,MADX,CAEE5E,UAAWiD,KAAKjD,UAChBb,KAAM8D,KAAK9D,KACX2B,SAAUmC,KAAKnC,mBAxFL8E,aCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO9H,EAAAC,EAAAC,cAAC6H,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnE,KAAK,SAAAoE,GACjCA,EAAaC","file":"static/js/main.cec7a4a2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.css';\n\nconst Title = ({ weight, text }) =>\n  weight === 1 ? (\n    <h1 className='appTitle'>{text}</h1>\n  ) : (\n    <h2 className='appTitle'>{text}</h2>\n  );\n\nTitle.defaultProps = {\n  weight: 1\n};\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n  weight: PropTypes.oneOf([1, 2]).isRequired\n};\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nconst instructions = `Instructions: You'll see twenty-one cards displayed in three rows of seven cards each. You need to pick a card and remember it. Then, you should click on the button that corresponds to the row on which your card is. This process is repeated three times and at the end, your card will be revealed!`;\n\nconst firstStep = `Choose a card, remember it, and click on the button that corresponds to the row on which your card is.`;\n\nconst secondStep = `Now, click on the row that the card you've previously chosen is.`;\n\nconst lastStep = `One last time! Click on the row on which your card is.`;\n\nconst DisplayedText = ({ step }) =>\n  step && (\n    <p className='appText'>\n      {step === 'instructions' ? instructions : ''}\n      {step === 1 ? firstStep : ''}\n      {step === 2 ? secondStep : ''}\n      {step === 3 ? lastStep : ''}\n    </p>\n  );\n\nDisplayedText.propTypes = {\n  step: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\n\nexport default DisplayedText;\n","import React from 'react';\nimport PropType from 'prop-types';\n\nimport './index.css';\n\nconst Button = ({ children, action, cssStyle }) => (\n  <button className={cssStyle} onClick={action}>\n    {children}\n  </button>\n);\n\nButton.propTypes = {\n  children: PropType.any.isRequired,\n  cssStyle: PropType.string.isRequired,\n  action: PropType.func.isRequired\n};\n\nexport default Button;\n","import React from 'react';\nimport Title from '../../components/title';\nimport DisplayedText from '../../components/text';\nimport Button from '../../components/button';\n\nimport './index.css';\n\nconst Instructions = ({ appName, goOn, step }) => (\n  <section className='instructions'>\n    <Title text={appName} />\n    <DisplayedText step={step} />\n    <Button cssStyle='instructionsButton' action={goOn}>\n      Continue\n    </Button>\n  </section>\n);\n\nexport default Instructions;\n","import React from 'react';\nimport PropType from 'prop-types';\n\nimport './index.css';\n\nconst Card = ({ image, suit, value }) => (\n  <div className='card'>\n    <img src={image} alt={`${value} of ${suit}`} />\n  </div>\n);\n\nCard.propTypes = {\n  image: PropType.string.isRequired,\n  suit: PropType.string.isRequired,\n  value: PropType.string.isRequired\n}\n\nexport default Card;\n","import React from 'react';\nimport Button from '../button';\nimport Card from '../card';\n\nimport './index.css';\n\nconst TrickRow = ({ cards, chooseRow, value }) => (\n  <div className='trickRow'>\n    <Button\n      cssStyle='trickRow__Button'\n      action={() => {\n        chooseRow(value - 1);\n      }}\n    >\n      {value}\n    </Button>\n\n    {cards.map((item, index) => (\n      <Card\n        image={item.image}\n        value={item.value}\n        suit={item.suit}\n        key={index}\n        index={index}\n      />\n    ))}\n  </div>\n);\n\nexport default TrickRow;\n","import React from 'react';\nimport './index.css';\n\nconst Loader = () => <div className='loader' />;\n\nexport default Loader;\n","import React from 'react';\nimport Title from '../../components/title';\nimport DisplayedText from '../../components/text';\nimport TrickRow from '../../components/trick-row';\nimport Loader from '../../components/loader';\n\nimport './index.css';\n\nconst Trick = ({ appName, cards, chooseRow, isLoading, step }) => (\n  <main>\n    <Title text={appName} />\n    <DisplayedText step={step} />\n    <section className='trickWrapper'>\n      {isLoading && <Loader />}\n\n      {!isLoading &&\n        cards.map((items, index) => (\n          <TrickRow\n            chooseRow={chooseRow}\n            cards={items}\n            value={index + 1}\n            key={index}\n          />\n        ))}\n    </section>\n  </main>\n);\n\nexport default Trick;\n","import React from 'react';\nimport Title from '../../components/title';\nimport Button from '../../components/button';\n\nconst ChosenCard = ({ chosenCard, tryAgain }) => (\n  <section className='chosenCard'>\n    <Title text='And your card is...' weight={2} />\n    <img\n      className='chosenCard__image'\n      src={chosenCard.image}\n      alt={`${chosenCard.value} of ${chosenCard.suit}`}\n    />\n    <Button cssStyle='chosenCard__button' action={tryAgain}>\n      Try again\n    </Button>\n  </section>\n);\n\nexport default ChosenCard;\n","import React from 'react';\nimport Instructions from './modules/instructions';\nimport Trick from './modules/trick';\nimport ChosenCard from './modules/chosen-card';\n\nconst EleventhContent = ({\n  appName,\n  cards,\n  chosenCard,\n  chooseRow,\n  goOn,\n  isChosenCard,\n  isInstructions,\n  isLoading,\n  isTrick,\n  tryAgain,\n  step\n}) => (\n  <div className='wrapper'>\n    {isInstructions && (\n      <Instructions appName={appName} goOn={goOn} step={step} />\n    )}\n\n    {isTrick && (\n      <Trick\n        appName={appName}\n        cards={cards}\n        chooseRow={chooseRow}\n        isLoading={isLoading}\n        step={step}\n      />\n    )}\n\n    {isChosenCard && <ChosenCard chosenCard={chosenCard} tryAgain={tryAgain} />}\n  </div>\n);\n\nexport default EleventhContent;\n","const getCardsConfigURL =\n  'https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1';\n\nconst getDeckURL = id =>\n  `https://deckofcardsapi.com/api/deck/${id}/draw/?count=21`;\n\nexport { getCardsConfigURL, getDeckURL };\n","import { getDeckURL } from '../../utils/urls';\n\nconst getCardsConfig = async url => {\n  let config;\n  try {\n    config = await fetch(url)\n      .then(data => data.json())\n      .then(data => data);\n  } catch (e) {\n    throw new Error(TypeError, 'Something went wrong in config call');\n  }\n\n  return config;\n};\n\nconst getDeck = async id => {\n  let deck;\n\n  try {\n    deck = await fetch(getDeckURL(id)).then(data => data.json());\n  } catch (e) {\n    throw new Error(TypeError, 'Something went wrong in deck call');\n  }\n\n  return deck;\n};\n\nexport { getCardsConfig, getDeck };\n","const orderArrayTreatment = (array = [], chosenRow = undefined) => {\n  let newArray = [[], [], []];\n  let changeArrayPosition = !chosenRow ? null : [];\n  let counter;\n\n  for (counter = 0; counter < array.length; counter++) {\n    newArray[0].push(array[counter]);\n    counter++;\n    newArray[1].push(array[counter]);\n    counter++;\n    newArray[2].push(array[counter]);\n  }\n\n  if (typeof chosenRow === 'number') {\n    changeArrayPosition = newArray.splice(\n      chosenRow,\n      chosenRow === 0 ? 1 : chosenRow\n    );\n\n    newArray = [newArray[0], changeArrayPosition[0], newArray[1]];\n  }\n\n  return newArray;\n};\n\nconst stepOrder = array => {\n  let newArray = [[], [], []];\n  let tempArray = [];\n  let counter;\n\n  tempArray = [...array[0][0], ...array[1][0], ...array[2][0]];\n\n  for (counter = 0; counter < 21; counter++) {\n    newArray[0].push(tempArray[counter]);\n    counter++;\n    newArray[1].push(tempArray[counter]);\n    counter++;\n    newArray[2].push(tempArray[counter]);\n  }\n\n  return newArray;\n};\n\nexport { orderArrayTreatment, stepOrder };\n","import React, { Component } from 'react';\nimport EleventhContent from './EleventhContent';\nimport { getCardsConfigURL } from './utils/urls';\nimport { getCardsConfig, getDeck } from './services/get-cards';\nimport { orderArrayTreatment, stepOrder } from './utils/order-array-treatment';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      appName: 'Mind-reading card Trick',\n      cards: '',\n      chosenCard: {},\n      deck_id: '',\n      isChosenCard: false,\n      isInstructions: true,\n      isLoading: false,\n      isTrick: false,\n      step: 'instructions'\n    };\n\n    this.goOn = () => {\n      this.setState({\n        isInstructions: false,\n        isTrick: true,\n        step: 1\n      });\n    };\n\n    this.chooseRow = index => {\n      let cards = this.state.cards;\n      let newCardsOrder = stepOrder(orderArrayTreatment(cards, index));\n      let step = this.state.step;\n\n      if (step === 3) this.chosenCard(newCardsOrder[1][3]);\n\n      this.setState({ cards: newCardsOrder, step: (step += 1) });\n    };\n\n    this.chosenCard = chosenCard => {\n      const { image, suit, value } = chosenCard;\n\n      this.setState({\n        chosenCard: {\n          image,\n          suit,\n          value\n        },\n        isTrick: false,\n        isChosenCard: true\n      });\n    };\n\n    this.tryAgain = () => {\n      const cards = this.state.cards;\n      this.setState({\n        cards: stepOrder(orderArrayTreatment(cards)),\n        isChosenCard: false,\n        isTrick: true,\n        step: 1\n      });\n    };\n\n    this.fillCards = async () => {\n      let isLocalStorageFilled = !!localStorage.getItem('cards');\n      this.setState({ isLoading: true });\n\n      if (!isLocalStorageFilled) {\n        const { deck_id } = await getCardsConfig(getCardsConfigURL);\n        let { cards } = await getDeck(deck_id);\n        cards = orderArrayTreatment(cards);\n\n        localStorage.setItem('cards', JSON.stringify(cards));\n\n        this.setState({ cards, deck_id, isLoading: false });\n      } else {\n        let localStorageCards = JSON.parse(localStorage.getItem('cards'));\n        localStorageCards = [...localStorageCards];\n\n        this.setState({ cards: localStorageCards, isLoading: false });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fillCards();\n  }\n\n  render() {\n    return (\n      <EleventhContent\n        {...this.state}\n        chooseRow={this.chooseRow}\n        goOn={this.goOn}\n        tryAgain={this.tryAgain}\n      />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './utils.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}